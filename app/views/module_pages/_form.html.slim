= form_with model: module_page do |form|
  = render "shared/form_errors", form: form
  .mb-3
    = form.label :module_page_name
    = form.text_field :module_page_name, class: "form-control"
  .mb-3
    = form.label :page_type
    = form.select :page_type, ModulePage.page_types.keys.to_a
  .mb-3
    = form.label :source_url
    = form.text_field :source_url, class: "form-control"
  .mb-3
    = form.label :navigation_header
    = form.check_box :navigation_header, checked: !module_page.new_record? || form.object.navigation_header?
  .mb-3
    = form.label :page_avatar, "Page Screenshot"
    = form.file_field :page_avatar, class: "form-control"
  h4 Composition Details
  #moduleCompositionDetails
    .mb-3
      = form.fields_for :module_composition_details do |module_composition_detail_form|
        / = mcd.hidden_field :module_page_id, value: module_page&.id
        = render "module_composition_detail_fields", f: module_composition_detail_form     
      .links
        = link_to_add_association 'Add Composition Info', form, :module_composition_details, partial: 'module_composition_detail_fields', class: "btn btn-success"
  = form.button button_label(module_page), class: "btn btn-primary me-3"
  - if form.object.persisted?
    =link_to "Delete", module_page, method: :delete, data: { confirm: "Really?" }, class: "btn btn-outline-danger"
  / = link_to "Add Composition Details", new_module_composition_detail_path(module_page),class: "btn btn-outline-secondary"